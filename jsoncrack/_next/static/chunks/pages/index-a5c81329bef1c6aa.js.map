{"version":3,"file":"static/chunks/pages/index-a5c81329bef1c6aa.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/layout/Landing/FAQ.tsx","webpack://_N_E/./src/layout/Landing/Features.tsx","webpack://_N_E/./src/layout/Landing/HeroPreview.tsx","webpack://_N_E/./src/layout/Landing/HeroSection.tsx","webpack://_N_E/./src/layout/Landing/LovedBy.tsx","webpack://_N_E/./src/layout/Landing/Section1.tsx","webpack://_N_E/./src/layout/Landing/Section2.tsx","webpack://_N_E/./src/layout/Landing/Section3.tsx","webpack://_N_E/./src/pages/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import React from \"react\";\r\nimport { Container, Title, Accordion } from \"@mantine/core\";\r\nimport Questions from \"../../data/faq.json\";\r\n\r\nexport const FAQ = () => {\r\n  return (\r\n    <Container id=\"faq\" component=\"section\" size=\"sm\" py={80}>\r\n      <Title\r\n        c=\"black\"\r\n        order={2}\r\n        fz={{\r\n          base: 24,\r\n          xs: 30,\r\n          sm: 36,\r\n        }}\r\n        fw={600}\r\n        mb={60}\r\n        ta=\"center\"\r\n      >\r\n        Frequently Asked Questions\r\n      </Title>\r\n      <Accordion\r\n        variant=\"separated\"\r\n        styles={{\r\n          panel: {\r\n            background: \"#f9f9f9\",\r\n            color: \"#1d1d1d\",\r\n          },\r\n          label: {\r\n            color: \"#1d1d1d\",\r\n            fontWeight: 500,\r\n          },\r\n          item: {\r\n            background: \"#f9f9f9\",\r\n            color: \"#1d1d1d\",\r\n            overflow: \"hidden\",\r\n            border: \"1px solid #ededed\",\r\n            borderRadius: 12,\r\n            fontWeight: 300,\r\n          },\r\n        }}\r\n      >\r\n        {Questions.map(({ title, content }) => (\r\n          <Accordion.Item key={title} value={title}>\r\n            <Accordion.Control>{title}</Accordion.Control>\r\n            <Accordion.Panel>{content}</Accordion.Panel>\r\n          </Accordion.Item>\r\n        ))}\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Flex,\r\n  Title,\r\n  Text,\r\n  Paper,\r\n  Center,\r\n  Badge,\r\n  ThemeIcon,\r\n  SimpleGrid,\r\n} from \"@mantine/core\";\r\nimport { FaBolt, FaToolbox } from \"react-icons/fa\";\r\nimport { IoImages, IoShieldCheckmark } from \"react-icons/io5\";\r\nimport { MdOutlineFormatIndentIncrease, MdOutlineGeneratingTokens } from \"react-icons/md\";\r\nimport { TbTransformFilled } from \"react-icons/tb\";\r\nimport { VscJson } from \"react-icons/vsc\";\r\n\r\ninterface FeatureItem {\r\n  title: string;\r\n  description: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n}\r\n\r\nconst features: FeatureItem[] = [\r\n  {\r\n    title: \"JSON Visualizer\",\r\n    description:\r\n      \"Transform your data into interactive graphs or trees as you type. Supports JSON, YAML, CSV, XML, and TOML.\",\r\n    icon: <FaBolt size={20} />,\r\n    color: \"yellow\",\r\n  },\r\n  {\r\n    title: \"Convert Data\",\r\n    description:\r\n      \"Convert JSON to CSV, YAML to JSON, XML to JSON, and more. Our JSON converter supports multiple formats for easy data exchange.\",\r\n    icon: <TbTransformFilled size={20} />,\r\n    color: \"orange\",\r\n  },\r\n  {\r\n    title: \"JSON Formatter and JSON Validator\",\r\n    description:\r\n      \"Format and beautify your JSON data to make it more readable. Validate JSON, YAML, and CSV.\",\r\n    icon: <MdOutlineFormatIndentIncrease size={20} />,\r\n    color: \"green\",\r\n  },\r\n  {\r\n    title: \"Generate Code/Types\",\r\n    description: \"Generate TypeScript interface, Golang structs, Rust serde, JSON Schema and more.\",\r\n    icon: <MdOutlineGeneratingTokens size={20} />,\r\n    color: \"grape\",\r\n  },\r\n  {\r\n    title: \"JSON Schema Generator\",\r\n    description:\r\n      \"Validate JSON Schema, create mock data, and generate JSON Schema from various data formats like JSON, YAML, XML, and CSV.\",\r\n    icon: <VscJson size={20} />,\r\n    color: \"cyan\",\r\n  },\r\n  {\r\n    title: \"Advanced JSON Tools\",\r\n    description: \"Decode JWT, randomize data, execute jq (JSON Query), json path commands.\",\r\n    icon: <FaToolbox size={20} />,\r\n    color: \"teal.5\",\r\n  },\r\n  {\r\n    title: \"Export Image\",\r\n    description:\r\n      \"Export image of the graphs as PNG, JPEG, or SVG. Share your data visualization with others.\",\r\n    icon: <IoImages size={20} />,\r\n    color: \"blue.4\",\r\n  },\r\n  {\r\n    title: \"Secure\",\r\n    description: \"Your data is never stored on our servers. Everything happens on your device.\",\r\n    icon: <IoShieldCheckmark size={20} />,\r\n    color: \"gray\",\r\n  },\r\n];\r\n\r\nexport const Features = () => {\r\n  return (\r\n    <Container component=\"section\" id=\"features\" fluid py={80}>\r\n      <Container size=\"xl\">\r\n        <Center>\r\n          <Badge\r\n            fw=\"600\"\r\n            tt=\"none\"\r\n            variant=\"outline\"\r\n            c=\"blue.7\"\r\n            color=\"blue.3\"\r\n            bg=\"blue.0\"\r\n            size=\"lg\"\r\n          >\r\n            Features\r\n          </Badge>\r\n        </Center>\r\n        <Title\r\n          c=\"black\"\r\n          order={2}\r\n          px=\"lg\"\r\n          fz={{\r\n            base: 26,\r\n            xs: 32,\r\n            sm: 42,\r\n          }}\r\n          fw={600}\r\n          mb={15}\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          Explore Your Data Visually\r\n        </Title>\r\n        <Title\r\n          order={3}\r\n          fw={500}\r\n          c=\"gray.7\"\r\n          px=\"lg\"\r\n          mx=\"auto\"\r\n          ta=\"center\"\r\n          mb={50}\r\n          fz={{ base: 16, sm: 18 }}\r\n          w={{ base: \"100%\", xs: \"80%\", sm: \"60%\", md: \"40%\" }}\r\n        >\r\n          All in one tool for JSON, YAML, CSV, XML, and TOML.\r\n        </Title>\r\n\r\n        <SimpleGrid\r\n          cols={{\r\n            base: 1,\r\n            xs: 2,\r\n            md: 4,\r\n          }}\r\n          spacing=\"xl\"\r\n        >\r\n          {features.map((feature, index) => (\r\n            <Paper key={index} bg=\"gray.0\" p=\"lg\" radius=\"md\">\r\n              <Flex gap=\"sm\" align=\"center\" justify=\"center\" direction=\"column\">\r\n                <ThemeIcon radius=\"xl\" size=\"xl\" variant=\"light\" color={feature.color}>\r\n                  {feature.icon}\r\n                </ThemeIcon>\r\n                <Title fw={500} ta=\"center\" c=\"gray.9\" order={3}>\r\n                  {feature.title}\r\n                </Title>\r\n                <Text fz=\"sm\" c=\"gray.8\">\r\n                  {feature.description}\r\n                </Text>\r\n              </Flex>\r\n            </Paper>\r\n          ))}\r\n        </SimpleGrid>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container, Image } from \"@mantine/core\";\r\n\r\nexport const HeroPreview = () => {\r\n  return (\r\n    <Container component=\"section\" id=\"preview\" fluid py=\"20\" mx=\"lg\">\r\n      <Image\r\n        src=\"./assets/editor.webp\"\r\n        loading=\"eager\"\r\n        maw={1036}\r\n        mx=\"auto\"\r\n        alt=\"JSON Crack editor preview\"\r\n        style={{\r\n          borderRadius: 10,\r\n          overflow: \"hidden\",\r\n          border: \"1px solid #c1c1c1\",\r\n          outline: \"1px solid #c1c1c1\",\r\n          outlineOffset: \"6px\",\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Plus_Jakarta_Sans } from \"next/font/google\";\r\nimport { Stack, Flex, Button } from \"@mantine/core\";\r\nimport styled from \"styled-components\";\r\nimport { FaChevronRight } from \"react-icons/fa6\";\r\n\r\nconst plusJakartaSans = Plus_Jakarta_Sans({\r\n  subsets: [\"latin-ext\"],\r\n});\r\n\r\nconst StyledHeroSection = styled.main`\r\n  position: relative;\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background-size: 40px 40px;\r\n    background-image: linear-gradient(to right, #f7f7f7 1px, transparent 1px),\r\n      linear-gradient(to bottom, #f7f7f7 1px, transparent 1px);\r\n    image-rendering: pixelated;\r\n    -webkit-mask-image: linear-gradient(to bottom, transparent, 0%, white, 98%, transparent);\r\n    mask-image: linear-gradient(to bottom, transparent, 0%, white, 98%, transparent);\r\n  }\r\n\r\n  @media only screen and (max-width: 1240px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StyledHeroSectionBody = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 6rem 10% 4rem;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  gap: 60px;\r\n  min-height: 40vh;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 6em 16px;\r\n    padding-top: 10vh;\r\n  }\r\n`;\r\n\r\nconst StyledHeroTitle = styled.h1`\r\n  position: relative;\r\n  font-size: 2.3rem;\r\n  font-weight: 700;\r\n  display: inline;\r\n  color: #120f43;\r\n  width: fit-content;\r\n  line-height: 1.15;\r\n  max-width: 30rem;\r\n  letter-spacing: -0.75px;\r\n  word-spacing: 6px;\r\n  font-family: ${plusJakartaSans.style.fontFamily};\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    font-size: 3.4rem;\r\n    max-width: 34rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    font-size: 3.8rem;\r\n    max-width: 40rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    font-size: 4.2rem;\r\n    max-width: 50rem;\r\n  }\r\n`;\r\n\r\nconst StyledHeroText = styled.h2`\r\n  font-size: 14px;\r\n  color: #4a5568;\r\n  font-weight: 400;\r\n  max-width: 75%;\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n\r\n  strong {\r\n    font-weight: 400;\r\n    color: #115fe6;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    font-size: 18px;\r\n    max-width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    font-size: 18px;\r\n    max-width: 60%;\r\n  }\r\n`;\r\n\r\nexport const HeroSection = () => {\r\n  return (\r\n    <StyledHeroSection>\r\n      <StyledHeroSectionBody>\r\n        <Stack flex=\"1\" miw={250} mx=\"auto\" align=\"center\">\r\n          <StyledHeroTitle>Visualize JSON into interactive graphs</StyledHeroTitle>\r\n          <StyledHeroText>\r\n            The best online JSON viewer to <strong>visualize</strong>, <strong>format</strong> and{\" \"}\r\n            <strong>explore</strong>.\r\n          </StyledHeroText>\r\n\r\n          <Flex gap=\"xs\" wrap=\"wrap\" justify=\"center\" hiddenFrom=\"xs\">\r\n            <Button\r\n              component=\"a\"\r\n              color=\"#202842\"\r\n              href=\"/editor\"\r\n              size=\"md\"\r\n              radius=\"md\"\r\n              rightSection={<FaChevronRight />}\r\n              fw=\"500\"\r\n              mt=\"lg\"\r\n            >\r\n              Go to Editor\r\n            </Button>\r\n          </Flex>\r\n          <Flex gap=\"lg\" wrap=\"wrap\" justify=\"center\" visibleFrom=\"xs\">\r\n            <Button\r\n              component=\"a\"\r\n              color=\"#202842\"\r\n              href=\"/editor\"\r\n              size=\"lg\"\r\n              radius=\"md\"\r\n              rightSection={<FaChevronRight />}\r\n              fw=\"500\"\r\n              mt=\"lg\"\r\n            >\r\n              Go to Editor\r\n            </Button>\r\n          </Flex>\r\n        </Stack>\r\n      </StyledHeroSectionBody>\r\n    </StyledHeroSection>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Container, Flex, Text } from \"@mantine/core\";\r\nimport styled from \"styled-components\";\r\nimport CountUp from \"react-countup\";\r\nimport { FaGithub, FaHackerNews, FaLinkedin, FaProductHunt, FaXTwitter } from \"react-icons/fa6\";\r\n\r\ninterface LovedByProps {\r\n  stars: number;\r\n}\r\n\r\nconst StyledFeaturedItem = styled.a`\r\n  display: flex;\r\n  gap: 6px;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  filter: grayscale(1) contrast(0.2);\r\n  transition: filter 0.2s;\r\n\r\n  &:hover {\r\n    filter: none;\r\n  }\r\n`;\r\n\r\nconst Featured = ({ stars }: LovedByProps) => {\r\n  return (\r\n    <Flex align=\"center\" justify=\"center\" gap=\"lg\" wrap=\"wrap\">\r\n      <StyledFeaturedItem\r\n        href=\"https://github.com/AykutSarac/jsoncrack.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n      >\r\n        <FaGithub color=\"black\" size={28} />\r\n        <Text fz=\"md\" fw={600} c=\"gray.8\">\r\n          <CountUp startVal={0} end={stars} enableScrollSpy scrollSpyOnce scrollSpyDelay={200} />{\" \"}\r\n          Stars\r\n        </Text>\r\n      </StyledFeaturedItem>\r\n      <StyledFeaturedItem\r\n        href=\"https://news.ycombinator.com/item?id=32626873\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n      >\r\n        <FaHackerNews color=\"#FF6600\" size={28} />\r\n        <Text fz=\"md\" fw={600} c=\"gray.8\">\r\n          Hacker News\r\n        </Text>\r\n      </StyledFeaturedItem>\r\n      <StyledFeaturedItem\r\n        href=\"https://www.producthunt.com/products/JSON-Crack\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n      >\r\n        <FaProductHunt color=\"#DA552F\" size={28} />\r\n        <Text fz=\"md\" fw={600} c=\"gray.8\">\r\n          Product Hunt\r\n        </Text>\r\n      </StyledFeaturedItem>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport const LovedBy = ({ stars }: LovedByProps) => {\r\n  return (\r\n    <Container pos=\"relative\" mx=\"auto\" pb=\"20\" pt={60}>\r\n      <Featured stars={stars} />\r\n      <Flex wrap=\"wrap\" justify=\"center\" gap=\"md\" mt=\"md\">\r\n        <Button\r\n          component=\"a\"\r\n          href=\"https://twitter.com/intent/post?text=Looking%20to%20understand%20or%20explore%20some%20JSON%3F%20Just%20paste%20or%20upload%20to%20visualize%20it%20as%20a%20graph%20with%20https%3A%2F%2Fjsoncrack.com%20%F0%9F%98%8D%20\"\r\n          target=\"_blank\"\r\n          color=\"black\"\r\n          leftSection={<FaXTwitter />}\r\n          rel=\"noopener\"\r\n        >\r\n          Share on X\r\n        </Button>\r\n        <Button\r\n          component=\"a\"\r\n          href=\"https://www.linkedin.com/feed/?shareActive=true&text=Looking%20to%20understand%20or%20explore%20some%20JSON%3F%20Just%20paste%20or%20upload%20to%20visualize%20it%20as%20a%20graph%20with%20https%3A%2F%2Fjsoncrack.com%20%F0%9F%98%8D%20\"\r\n          target=\"_blank\"\r\n          color=\"#0077B5\"\r\n          leftSection={<FaLinkedin />}\r\n          rel=\"noopener\"\r\n        >\r\n          Share on LinkedIn\r\n        </Button>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// interface TweetCardProps {\r\n//   username: string;\r\n//   handle: string;\r\n//   profileImage: string;\r\n//   tweet: string;\r\n//   tweetId: string;\r\n//   verified?: \"company\" | \"individual\";\r\n// }\r\n//\r\n// const TweetCard = ({\r\n//   profileImage,\r\n//   handle,\r\n//   tweetId,\r\n//   tweet,\r\n//   username,\r\n//   verified,\r\n// }: TweetCardProps) => {\r\n//   return (\r\n//     <Paper p=\"sm\" w=\"fit-content\" withBorder radius=\"md\" bg=\"gray.0\" miw={300} maw={450}>\r\n//       <Flex justify=\"space-between\">\r\n//         <Link href={`https://twitter.com/${handle}`} target=\"_blank\">\r\n//           <Flex align=\"flex-start\" gap=\"sm\" direction=\"row\">\r\n//             <Avatar src={profileImage} w={40} h={40} alt={handle} />\r\n//             <Stack gap={0}>\r\n//               <Flex align=\"center\" gap={2}>\r\n//                 <Text c=\"dark\" fz=\"sm\" fw={500}>\r\n//                   {username}\r\n//                 </Text>\r\n//                 {verified && (\r\n//                   <VscVerifiedFilled color={verified === \"company\" ? \"#ECCC4B\" : \"#1D9BF0\"} />\r\n//                 )}\r\n//               </Flex>\r\n//               <Text fz=\"xs\" c=\"gray.6\">\r\n//                 @{handle}\r\n//               </Text>\r\n//             </Stack>\r\n//           </Flex>\r\n//         </Link>\r\n//         <Link title=\"twitter\" target=\"_blank\" href={`https://x.com/${handle}/status/${tweetId}`}>\r\n//           <FaTwitter color=\"#1EA1F1\" size={20} />\r\n//         </Link>\r\n//       </Flex>\r\n//       <Text fz=\"sm\" c=\"gray.8\" mt=\"lg\">\r\n//         {tweet}\r\n//       </Text>\r\n//     </Paper>\r\n//   );\r\n// };\r\n","import React from \"react\";\r\nimport { Container, Image, SimpleGrid, Stack, Text, Title } from \"@mantine/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledImageWrapper = styled.div`\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 12px;\r\n    border-radius: 15px;\r\n    border: 1px solid #e0e0e0;\r\n    background: #f3f3f3;\r\n    --line-color-1: #e3e3e3;\r\n    --line-color-2: #e5e5e5;\r\n    background-image: linear-gradient(var(--line-color-1) 1.5px, transparent 1.5px),\r\n      linear-gradient(90deg, var(--line-color-1) 1.5px, transparent 1.5px),\r\n      linear-gradient(var(--line-color-2) 1px, transparent 1px),\r\n      linear-gradient(90deg, var(--line-color-2) 1px, transparent 1px);\r\n    background-position:\r\n      -1.5px -1.5px,\r\n      -1.5px -1.5px,\r\n      -1px -1px,\r\n      -1px -1px;\r\n    background-size:\r\n      100px 100px,\r\n      100px 100px,\r\n      20px 20px,\r\n      20px 20px;\r\n  }\r\n\r\n  img {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const Section1 = () => {\r\n  return (\r\n    <Container size=\"xl\" py=\"80\">\r\n      <Title\r\n        lh=\"1.1\"\r\n        fz={{\r\n          base: 26,\r\n          xs: 46,\r\n          sm: 52,\r\n        }}\r\n        maw=\"16ch\"\r\n        ta=\"center\"\r\n        order={2}\r\n        c=\"gray.9\"\r\n        mx=\"auto\"\r\n        mb=\"15\"\r\n      >\r\n        Make working with JSON easy\r\n      </Title>\r\n      <Title\r\n        order={3}\r\n        fw={400}\r\n        c=\"gray.7\"\r\n        px=\"lg\"\r\n        mx=\"auto\"\r\n        ta=\"center\"\r\n        mb={50}\r\n        fz={{ base: 16, sm: 18 }}\r\n        w={{ base: \"100%\", md: \"600\" }}\r\n      >\r\n        JSON Crack eliminates the chaos of raw, messy data, making the complex appear simple and\r\n        easy to understand.\r\n      </Title>\r\n      <SimpleGrid\r\n        cols={{\r\n          base: 1,\r\n          sm: 3,\r\n        }}\r\n      >\r\n        <Stack\r\n          p=\"lg\"\r\n          m=\"lg\"\r\n          maw=\"360\"\r\n          mx=\"auto\"\r\n          style={{\r\n            borderRadius: \"17px\",\r\n            border: \"1px solid #e0e0e0\",\r\n          }}\r\n        >\r\n          <StyledImageWrapper>\r\n            <Image src=\"/assets/step1-visual.png\" pos=\"relative\" w=\"100%\" alt=\"upload\" />\r\n          </StyledImageWrapper>\r\n          <Title ta=\"center\" c=\"black\" order={3}>\r\n            Upload your data\r\n          </Title>\r\n          <Text ta=\"center\" c=\"gray.7\">\r\n            Upload your JSON file, URL, or type your data directly into our easy-to-use text editor.\r\n          </Text>\r\n        </Stack>\r\n        <Stack\r\n          p=\"lg\"\r\n          m=\"lg\"\r\n          maw=\"360\"\r\n          mx=\"auto\"\r\n          style={{\r\n            borderRadius: \"17px\",\r\n            border: \"1px solid #e0e0e0\",\r\n          }}\r\n        >\r\n          <StyledImageWrapper>\r\n            <Image src=\"/assets/step2-visual.png\" pos=\"relative\" w=\"100%\" alt=\"visualize\" />\r\n          </StyledImageWrapper>\r\n          <Title ta=\"center\" c=\"black\" order={3}>\r\n            Visualize your JSON\r\n          </Title>\r\n          <Text ta=\"center\" c=\"gray.7\">\r\n            Your data will automatically be turned into a visual tree graph so you can quickly\r\n            understand your data at a glance.\r\n          </Text>\r\n        </Stack>\r\n        <Stack\r\n          p=\"lg\"\r\n          m=\"lg\"\r\n          maw=\"360\"\r\n          mx=\"auto\"\r\n          style={{\r\n            borderRadius: \"17px\",\r\n            border: \"1px solid #e0e0e0\",\r\n          }}\r\n        >\r\n          <StyledImageWrapper>\r\n            <Image src=\"/assets/step3-visual.png\" pos=\"relative\" w=\"100%\" alt=\"export image\" />\r\n          </StyledImageWrapper>\r\n          <Title ta=\"center\" c=\"black\" order={3}>\r\n            Export to image\r\n          </Title>\r\n          <Text ta=\"center\" c=\"gray.7\">\r\n            Once you&apos;re satisfied, you can export an image of your graph as PNG, JPEG, or SVG\r\n            and share with others.\r\n          </Text>\r\n        </Stack>\r\n      </SimpleGrid>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Image,\r\n  JsonInput,\r\n  List,\r\n  SimpleGrid,\r\n  Stack,\r\n  Text,\r\n  Title,\r\n} from \"@mantine/core\";\r\nimport styled from \"styled-components\";\r\nimport { LuBadgeCheck } from \"react-icons/lu\";\r\n\r\nconst StyledDottedContainer = styled.div`\r\n  position: relative;\r\n  background-color: #f3f3f3;\r\n  background-image: radial-gradient(#e0e0e0 3px, transparent 0);\r\n  background-size: 40px 40px;\r\n  border: 1px solid #e0e0e0;\r\n\r\n  width: 100%;\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  border-radius: 15px;\r\n  height: 460px;\r\n\r\n  .jc {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 12px;\r\n    border-radius: 15px;\r\n    transform: translate(-80px, 10%);\r\n    border: 1px solid #000;\r\n    box-shadow: 0px 4px 0px 0px #000;\r\n    background: #f3f3f3;\r\n    --line-color-1: #e3e3e3;\r\n    --line-color-2: #e5e5e5;\r\n    background-image: linear-gradient(var(--line-color-1) 1.5px, transparent 1.5px),\r\n      linear-gradient(90deg, var(--line-color-1) 1.5px, transparent 1.5px),\r\n      linear-gradient(var(--line-color-2) 1px, transparent 1px),\r\n      linear-gradient(90deg, var(--line-color-2) 1px, transparent 1px);\r\n    background-position:\r\n      -1.5px -1.5px,\r\n      -1.5px -1.5px,\r\n      -1px -1px,\r\n      -1px -1px;\r\n    background-size:\r\n      100px 100px,\r\n      100px 100px,\r\n      20px 20px,\r\n      20px 20px;\r\n  }\r\n\r\n  .jcode {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translate(80%, 80%);\r\n    width: 273px;\r\n    border-radius: 15px;\r\n    border: 1px solid #000;\r\n    box-shadow: 0px 4px 0px 0px #000;\r\n    overflow: hidden;\r\n  }\r\n\r\n  @media only screen and (max-width: 1085px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Section2 = () => {\r\n  return (\r\n    <Container size=\"xl\" py=\"80\">\r\n      <Flex justify=\"center\" gap=\"80\" align=\"center\">\r\n        <Stack maw={634}>\r\n          <Title\r\n            lh=\"1.1\"\r\n            fz={{\r\n              base: 26,\r\n              xs: 32,\r\n              sm: 42,\r\n            }}\r\n            maw={500}\r\n            order={2}\r\n            c=\"gray.9\"\r\n          >\r\n            Don&apos;t waste time with JSON formatters\r\n          </Title>\r\n          <Text my=\"md\" c=\"gray.7\" fz={16} maw={510}>\r\n            Format JSON and transform into a readable graph in seconds. JSON Crack is an open-source\r\n            online tool that helps you visualize and understand data.\r\n          </Text>\r\n          <List\r\n            fz={{\r\n              base: 16,\r\n              xs: 18,\r\n            }}\r\n            fw={500}\r\n            component={SimpleGrid}\r\n            c=\"gray.8\"\r\n            icon={<LuBadgeCheck size=\"20\" />}\r\n          >\r\n            <SimpleGrid w=\"fit-content\" cols={2}>\r\n              <List.Item>VS Code Extension</List.Item>\r\n              <List.Item>Open-source</List.Item>\r\n              <List.Item>JSON Validator/Formatter</List.Item>\r\n              <List.Item>Export Image</List.Item>\r\n            </SimpleGrid>\r\n          </List>\r\n          <Button\r\n            component=\"a\"\r\n            href=\"/editor\"\r\n            color=\"#202842\"\r\n            size=\"lg\"\r\n            radius=\"md\"\r\n            w=\"fit-content\"\r\n            mt=\"sm\"\r\n          >\r\n            Open JSON Editor\r\n          </Button>\r\n        </Stack>\r\n        <StyledDottedContainer>\r\n          <Image className=\"jc\" src=\"/assets/diagram.svg\" alt=\"diagram\" loading=\"lazy\" />\r\n          <JsonInput\r\n            w={273}\r\n            rows={12}\r\n            className=\"jcode\"\r\n            styles={{\r\n              input: {\r\n                border: \"none\",\r\n                fontSize: 12,\r\n              },\r\n            }}\r\n            value={JSON.stringify(\r\n              {\r\n                squadName: \"Super hero squad\",\r\n                homeTown: \"Metro City\",\r\n                formed: 2016,\r\n                secretBase: \"Super tower\",\r\n                active: true,\r\n                members: [\r\n                  {\r\n                    name: \"Molecule Man\",\r\n                    age: 29,\r\n                    secretIdentity: \"Dan Jukes\",\r\n                  },\r\n                  {\r\n                    name: \"Madame Uppercut\",\r\n                    age: 39,\r\n                    secretIdentity: \"Jane Wilson\",\r\n                  },\r\n                  {\r\n                    name: \"Eternal Flame\",\r\n                    age: 1000000,\r\n                    secretIdentity: \"Unknown\",\r\n                  },\r\n                ],\r\n              },\r\n              null,\r\n              2\r\n            )}\r\n          />\r\n        </StyledDottedContainer>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Image,\r\n  List,\r\n  SimpleGrid,\r\n  Stack,\r\n  Text,\r\n  Title,\r\n} from \"@mantine/core\";\r\nimport styled from \"styled-components\";\r\nimport { LuBadgeCheck } from \"react-icons/lu\";\r\n\r\nconst StyledDottedContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  border-radius: 15px;\r\n  height: 460px;\r\n\r\n  .jc {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 12px;\r\n    border-radius: 15px;\r\n    border: 1px solid #e0e0e0;\r\n    background: #f3f3f3;\r\n    --line-color-1: #e3e3e3;\r\n    --line-color-2: #e5e5e5;\r\n    background-image: linear-gradient(var(--line-color-1) 1.5px, transparent 1.5px),\r\n      linear-gradient(90deg, var(--line-color-1) 1.5px, transparent 1.5px),\r\n      linear-gradient(var(--line-color-2) 1px, transparent 1px),\r\n      linear-gradient(90deg, var(--line-color-2) 1px, transparent 1px);\r\n    background-position:\r\n      -1.5px -1.5px,\r\n      -1.5px -1.5px,\r\n      -1px -1px,\r\n      -1px -1px;\r\n    background-size:\r\n      100px 100px,\r\n      100px 100px,\r\n      20px 20px,\r\n      20px 20px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1085px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Section3 = () => {\r\n  return (\r\n    <Container size=\"xl\" py=\"80\">\r\n      <Flex justify=\"center\" gap=\"80\" align=\"center\">\r\n        <StyledDottedContainer>\r\n          <Image\r\n            className=\"jc\"\r\n            src=\"/assets/bf2-image.png\"\r\n            alt=\"json, csv, yaml, xml\"\r\n            loading=\"lazy\"\r\n          />\r\n        </StyledDottedContainer>\r\n        <Stack maw={634}>\r\n          <Title\r\n            lh=\"1.1\"\r\n            fz={{\r\n              base: 26,\r\n              xs: 32,\r\n              sm: 42,\r\n            }}\r\n            maw={500}\r\n            order={2}\r\n            c=\"gray.9\"\r\n          >\r\n            Visualize and convert to multiple formats\r\n          </Title>\r\n          <Text my=\"md\" c=\"gray.7\" fz={16} maw={510}>\r\n            JSON Crack supports formats like TOML, CSV, YAML, and XML, making it easier to visualize\r\n            your data, no matter the type.\r\n          </Text>\r\n          <List\r\n            fz={{\r\n              base: 16,\r\n              xs: 18,\r\n            }}\r\n            fw={500}\r\n            component={SimpleGrid}\r\n            c=\"gray.8\"\r\n            icon={<LuBadgeCheck size=\"20\" />}\r\n          >\r\n            <SimpleGrid w=\"fit-content\" cols={2}>\r\n              <List.Item>JSON to CSV</List.Item>\r\n              <List.Item>YAML to JSON</List.Item>\r\n              <List.Item>XML to JSON</List.Item>\r\n              <List.Item>and more...</List.Item>\r\n            </SimpleGrid>\r\n          </List>\r\n          <Button\r\n            component=\"a\"\r\n            href=\"/converter/json-to-yaml\"\r\n            color=\"#202842\"\r\n            size=\"lg\"\r\n            radius=\"md\"\r\n            w=\"fit-content\"\r\n            mt=\"sm\"\r\n          >\r\n            Open Converter\r\n          </Button>\r\n        </Stack>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport type { InferGetStaticPropsType, GetStaticProps } from \"next\";\r\nimport { NextSeo } from \"next-seo\";\r\nimport { SEO } from \"../constants/seo\";\r\nimport { FAQ } from \"../layout/Landing/FAQ\";\r\nimport { Features } from \"../layout/Landing/Features\";\r\nimport { HeroPreview } from \"../layout/Landing/HeroPreview\";\r\nimport { HeroSection } from \"../layout/Landing/HeroSection\";\r\nimport { LovedBy } from \"../layout/Landing/LovedBy\";\r\nimport { Section1 } from \"../layout/Landing/Section1\";\r\nimport { Section2 } from \"../layout/Landing/Section2\";\r\nimport { Section3 } from \"../layout/Landing/Section3\";\r\nimport Layout from \"../layout/PageLayout\";\r\n\r\nexport const HomePage = (props: InferGetStaticPropsType<typeof getStaticProps>) => {\r\n  return (\r\n    <Layout>\r\n      <NextSeo {...SEO} canonical=\"https://jsoncrack.com\" />\r\n      <HeroSection />\r\n      <HeroPreview />\r\n      <Section1 />\r\n      <Section2 />\r\n      <Section3 />\r\n      <Features />\r\n      <LovedBy stars={props.stars} />\r\n      <FAQ />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nexport const getStaticProps = (async () => {\r\n  try {\r\n    const res = await fetch(\"https://api.github.com/repos/AykutSarac/jsoncrack.com\");\r\n    const data = await res.json();\r\n\r\n    return {\r\n      props: {\r\n        stars: data?.stargazers_count || 0,\r\n      },\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      props: {\r\n        stars: 0,\r\n      },\r\n    };\r\n  }\r\n}) satisfies GetStaticProps<{ stars: number }>;\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","FAQ","jsx_runtime","jsxs","Container","id","component","size","py","jsx","Title","c","order","fz","base","xs","sm","fw","mb","ta","Accordion","variant","styles","panel","background","color","label","fontWeight","item","overflow","border","borderRadius","Questions","map","title","content","param","Item","value","Control","Panel","features","description","icon","FaBolt","TbTransformFilled","MdOutlineFormatIndentIncrease","MdOutlineGeneratingTokens","VscJson","FaToolbox","IoImages","IoShieldCheckmark","Features","fluid","Center","Badge","tt","bg","px","style","textAlign","mx","w","md","SimpleGrid","cols","spacing","feature","index","Paper","p","radius","Flex","gap","align","justify","direction","ThemeIcon","Text","HeroPreview","Image","src","loading","maw","alt","outline","outlineOffset","StyledHeroSection","styled","main","withConfig","StyledHeroSectionBody","div","StyledHeroTitle","h1","plusJakartaSans","fontFamily","StyledHeroText","h2","HeroSection","Stack","flex","miw","strong","wrap","hiddenFrom","Button","href","rightSection","FaChevronRight","mt","visibleFrom","StyledFeaturedItem","a","Featured","stars","target","rel","FaGithub","CountUp","startVal","end","enableScrollSpy","scrollSpyOnce","scrollSpyDelay","FaHackerNews","FaProductHunt","LovedBy","pos","pb","pt","leftSection","FaXTwitter","FaLinkedin","StyledImageWrapper","Section1","lh","m","StyledDottedContainer","Section2","my","List","LuBadgeCheck","className","JsonInput","rows","input","fontSize","JSON","stringify","squadName","homeTown","formed","secretBase","active","members","name","age","secretIdentity","Section3","HomePage","Layout","NextSeo","SEO","canonical","props","pages"],"sourceRoot":""}